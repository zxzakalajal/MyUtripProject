<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="trip.mapper.BoardMapper">

	<select id="selectBoardList" parameterType="int" resultType="trip.dto.BoardDTO">
		select board_no,user_id,title,content,to_char(write_date, 'yyyy-mm-dd') as write_date,board_like,board_count,comment_count
    	from (select ceil (rownum /7) as pagenum,board_no,user_id,title,content,write_date,board_like,board_count,comment_count
   	 	from (select b.*, nvl(c.comment_count,0) as comment_count 
    	from board b,(select board_no, count(*) as comment_count 
    	from board_comment group by board_no) c
    	where b.board_no = c.board_no(+)
		<choose>
			<when test="mode.equals('board_like')">
				order by b.board_like desc))
			</when>
			<otherwise>
				order by b.board_no desc))
			</otherwise>
		</choose>
		where pagenum = #{pageNo}
	</select>

	<select id="selectCount" resultType="int">
		select count(*) from board
	</select>
	
	<select id="selectSearchCount" resultType="int" parameterType="map">
		select count(*) from board where 
		<choose>
			<when test="kind.equals('title')">
				title like '%'||#{search}||'%'
			</when>
			<when test="kind.equals('id')">
				upper(user_id) like ('%'||upper(#{search})||'%')
			</when>
			<otherwise>
				content like '%'||#{search}||'%'
			</otherwise>
		</choose> 
	</select>

	<!-- <select id="selectBoard" parameterType="int" resultType="trip.dto.BoardDTO">
		select * from board where board_no = #{boardNo}
	</select> -->
	<select id="selectBoard" parameterType="int" resultType="trip.dto.BoardDTO">
		select a.board_no, a.user_id,a.title, a.content, a.write_date, a.board_like, a.board_count, b.num,b.next_board_no,b.pre_board_no
		from BOARD a inner join (
		select rownum as num , board_no, 
		lead(board_no,1,0) over(order by board_no) next_board_no,
		lag(board_no,1,0) over(order by board_no) pre_board_no
		from BOARD) b on a.board_no = b.board_no
		where a.board_no = #{pageNo} 
	</select>

	<select id="selectBoardComment" parameterType="int" resultType="comment">
		select * from board_comment where board_no = #{boardNo}
	</select>

	<insert id="insertBoard" parameterType="trip.dto.BoardDTO">
		insert into board(board_no,user_id,title,content) values(#{boardNo},#{id},#{title},#{content})
	</insert>
	<select id="newBoardNo" resultType="int">
		select board_no_seq.nextval from dual
	</select>
	
	<insert id="insertBoardComment" parameterType="trip.dto.CommentDTO">
		insert into board_comment(comment_no, board_no, user_id, content) values(#{commentNo}, #{boardNo}, #{id}, #{content})
	</insert>
	
	<select id="newCommentNo" resultType="int">
		select board_comment_seq.nextval from dual
	</select>
	
	<update id="addBoardLike" parameterType="map">
		update board set board_like = board_like + 1 where board_no = #{boardNo}
	</update>
	
	<delete id="deleteComment" parameterType="int">
		delete from board_comment where comment_no = #{commentNo}
	</delete>
	
	<update id="updateComment" parameterType="trip.dto.CommentDTO">
		update board_comment set content=#{content} where comment_no=#{commentNo} and user_id = #{id}
	</update> 
	
	<select id="selectSearchBoard" parameterType="map" resultType="trip.dto.BoardDTO">
		select board_no,user_id,title,content,to_char(write_date, 'yyyy-mm-dd') as write_date,board_like,board_count,comment_count
    	from (select ceil (rownum /7) as pagenum,board_no,user_id,title,content,write_date,board_like,board_count,comment_count
   	 	from (select b.*, nvl(c.comment_count,0) as comment_count 
    	from board b,(select board_no, count(*) as comment_count 
    	from board_comment group by board_no) c
    	where b.board_no = c.board_no(+) order by b.board_no desc) where
    	<choose>
			<when test="kind.equals('title')">
				title like '%'||#{search}||'%' order by board_no desc)
			</when>
			<when test="kind.equals('id')">
				upper(user_id) like ('%'||upper(#{search})||'%') order by board_no desc)
			</when>
			<otherwise>
				content like '%'||#{search}||'%' order by board_no desc)
			</otherwise>
		</choose>
    	where pagenum = #{pageNo}
	</select>
	
	<update id="addCount" parameterType="int">
		update board set board_count = board_count+1 where board_no = #{boardNo}
	</update>
	
	<delete id="deleteBoard" parameterType="int">
		delete from board where board_no = #{boardNo}
	</delete>
	<update id="updateBoard" parameterType="trip.dto.BoardDTO">
		update board set title=#{title}, content=#{content} where board_no=#{boardNo} and user_id = #{id}
	</update>
	
	<select id="commentCount" resultType="int">
		select count(*) from board_comment where board_no = #{boardNo}
	</select>
	
</mapper>