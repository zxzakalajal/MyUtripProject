<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="trip.mapper.UserMapper">
	<insert id="register" parameterType="user">
		insert into
		utrip_user(id,password,name,email,mbti,role)
		values(#{id},#{password},#{name},#{email},#{mbti},#{role})
	</insert>
	<select id="selectById" parameterType="String" resultType="user">
		select * from utrip_user where id like #{id}
	</select>
	<insert id="kakaoRegister" parameterType="user">
		insert into
		utrip_user(id,name,email,mbti,role)
		values(#{id},#{name},#{email},#{mbti},#{role})
	</insert>
	<update id="update" parameterType="user">
		update utrip_user set
		name=#{name}, email=#{email}, mbti=#{mbti}
		where id=#{id}
	</update>
	<select id="selectQnaList" parameterType="String"
		resultType="user">
		select * from utrip_user where id like #{user_id}
	</select>
	<select id="selectPopulTripList" resultType="trip.dto.TripDTO">
		select area_name, t.trip_no, title, substr(content,1,30) as content, video_url,
		rating, total from
		(select area_name, t.* from area a, trip t where substr(t.trip_no,1,2) like
		a.area order by rating desc) t, trip_like l 
		where rownum<![CDATA[<]]>=5 and t.trip_no like l.trip_no
	</select>
	<select id="selectTripInfo" parameterType="String"
		resultType="trip.dto.TripDTO">
		select area_name, trip_no, title, content, video_url,
		rating from trip, area where substr(trip_no,1,2) like area and trip_no
		like #{tripNo}
	</select>
	<select id="selectCourseInfo" parameterType="String"
		resultType="trip.dto.CourseDTO">
		select c.course_no, c.place_no, p.place_name, p.place_x,
		p.place_y from course c, place p
		where c.place_no = p.place_no and trip_no like #{tripNo} order by course_no
	</select>
	<select id="selectMbtiTripInfo" parameterType="String"
		resultType="trip.dto.TripDTO">
		select area_name, trip_no, title, substr(content,0,20), video_url,
		rating from
		trip, area where substr(trip_no,1,2) like area and trip_no like
		(select trip_no from (select * from trip_like order by #{mbti})
		where rownum = 1)
	</select>
		<select id="selectMbtiTripList" parameterType="String" resultType="trip.dto.TripDTO">
		select area_name, t.trip_no, title, substr(content,0,20), video_url,
		rating,${mbti} as total from
		trip t, area,trip_like l  where t.trip_no like l.trip_no and substr(t.trip_no,1,2) like area and t.trip_no in
		(select trip_no from (select rownum, ti.* from (select * from trip_like order by intj desc)ti)
		where rownum <![CDATA[<]]>= 5) order by ${mbti} desc
	</select>
	<select id="selectAreaList" resultType="trip.dto.TripDTO">
		select a.area_name,
		a.trip_no, a.title, a.content from
		(select a.area_name, substr(t.trip_no,0,2) as area, t.trip_no, t.title,
		substr(t.content,0,20) as content, t.rating from trip t, area a where
		a.area = substr(t.trip_no,0,2)) a,
		(select substr(trip_no,0,2) as area, max(rating) as rating from trip group by
		substr(trip_no,0,2)) b where a.area = b.area and a.rating = b.rating
	</select>
	<select id="selectHotelInfo" parameterType="String" resultType="trip.dto.HotelDTO">
		select * from hotel where substr(hotel_no,0,2) like 
		(select area from area where area_name=#{area_name})
	</select>
	<select id="selectTripByArea" parameterType="String" resultType="trip.dto.TripDTO">
		select area_name, t.* from
		(select * from trip where substr(trip_no,0,2) like #{area})t , area a
		where substr(t.trip_no,0,2) like a.area
	</select>
	<select id="getTripLike" parameterType="map" resultType="int">
		select ${mbti} from trip_like where trip_no like #{tripNo}
	</select>
	<update id="tripLike" parameterType="map">
		update trip_like set ${mbti} = 
		(select ${mbti} from trip_like where trip_no like #{tripNo}) + 1
		where trip_no like #{tripNo} 
	</update>
	<insert id="insertTripLike" parameterType="String">
		insert into trip_like(trip_no) values(#{trip_no})
	</insert>
	<select id="tripLikeCheck" parameterType="map" resultType="int">
		select count(*) from trip_like_user
		where trip_no like #{tripNo} and user_id like #{userId}
	</select>
	<insert id="insertTripLikeUser" parameterType="map">
		insert into trip_like_user values(#{tripNo},#{userId})
	</insert>
	<delete id="withdraw" parameterType="String">
		delete from utrip_user where id = #{id}
	</delete>
	<select resultType="trip.dto.NoticeDTO" parameterType="trip.dto.NoticeDTO" id="selectNoticeList">
		select a.notice_no -- 글번호 
			 , a.title -- 제목 
			 , a.content -- 내용
			 , to_char(a.write_date, 'yyyy-mm-dd') as write_date -- 작성일 
			 , a.nwriter -- 작성자
			 , a.notice_count --댓글 count 
			 , a.nlike -- 좋아요
			 , a.nhate -- 싫어요
			 , b.num
             , b.next_notice_no
             , b.pre_notice_no
		  from notice a /* 공지사항 */ 
		 inner join (
		select rownum as num -- 순번 
			 , notice_no -- 글번호 
             , lead(notice_no,1,0) over(order by notice_no) next_notice_no
             , lag(notice_no,1,0) over(order by notice_no) pre_notice_no
		  from notice) b /* 공지사항 */ 
		    on a.notice_no = b.notice_no
		where b.num between 
			  ((#{pageNo} * 7) - 6) and (#{pageNo} * 7) 
	</select>
	<select resultType="int" id="selectnoticeCount">
		select count(*) from notice 
	</select>
	<select resultType="trip.dto.NoticeDTO" parameterType="int" id="selectNotice">
		select a.notice_no -- 글번호 
			 , a.title -- 제목 
			 , a.content -- 내용
			 , to_char(a.write_date, 'yyyy-mm-dd') as write_date -- 작성일 
			 , a.nwriter -- 작성자
			 , a.notice_count --댓글 count 
			 , a.nlike -- 좋아요
			 , a.nhate -- 싫어요
			 , b.num
             , b.next_notice_no
             , b.pre_notice_no
		  from notice a /* 공지사항 */ 
		 inner join (
		select rownum as num -- 순번 
			 , notice_no -- 글번호 
             , lead(notice_no,1,0) over(order by notice_no) next_notice_no
             , lag(notice_no,1,0) over(order by notice_no) pre_notice_no
		  from notice) b
		    on a.notice_no = b.notice_no
		 where a.notice_no = #{pageNo} 
	</select>
	<select resultType="trip.dto.FileDTO" parameterType="int" id="selectFileList">
		select * 
		  from notice_file_list 
		 where notice_no = #{notice_no}
	</select>
	<update id="addNoticeLikeHate" parameterType="map">
		update notice set 
		<choose>
			<when test="mode == 0">
				nlike = nlike + 1
			</when>
			<otherwise>
				nhate = nhate + 1
			</otherwise>
		</choose>
		where notice_no = #{notice_no}
	</update>
	<insert id="insertNoticeComment" parameterType="trip.dto.NoticeCommentDTO">
		insert into 
			   notice_comment(
			   comment_no
			 , notice_no
			 , writer
			 , content
			 , write_date
			 ) 
	   values( notice_comment_seq.nextval
			 , #{notice_no}
			 , #{writer}
			 , #{content}
			 , sysdate
			 )
	</insert>
	<update id="addnoticeCount" parameterType="int">
		update notice set notice_count = notice_count+1 where notice_no = #{notice_no}
	</update>
	<select id="selectNoticeComment" parameterType="int" resultType="noticecomment">
		select comment_no
		     , notice_no
		     , writer
		     , content
		     , write_date
		     , clike
		     , chate
		  from notice_comment where notice_no = #{notice_no}
		 order by comment_no
	</select>
	<update id="updatenoticeCommentLike" parameterType="int">
		update notice_comment set clike = clike + 1 where comment_no = #{comment_no}  
	</update>
	<update id="updatenoticeCommentHate" parameterType="int">
		update notice_comment set chate = chate+ 1 where comment_no = #{comment_no}  
	</update>
	<update id="assessment" parameterType="map">
		update trip_rating set sum = sum + #{score}, count = count + 1
		where trip_no like #{trip_no}
	</update>
	<insert id="insertTripRating" parameterType="String">
		insert into trip_rating values(#{trip_no},0,0)
	</insert>
	<select id="getRating" parameterType="String" resultType="double">
		select sum/count from trip_rating where trip_no like #{trip_no}
	</select>
	<update id="updateTripRating" parameterType="map">
		update trip set rating = #{rating} where trip_no like #{trip_no}
	</update>
	<select id="tripRatingCheck" parameterType="map" resultType="int">
		select count(*) from trip_rating_user
		where trip_no like #{trip_no} and user_id like #{user_id}
 	</select> 
 	<insert id="insertTripRatingUser" parameterType="map" >
 		insert into trip_rating_user values(#{user_id},#{trip_no})
 	</insert>
	<select id="nextnotice" parameterType="int" resultType="int">
		select next_notice_no as notice_no from(
		select notice_no
		     , lead(notice_no,1,0) over(order by notice_no) next_notice_no
          from notice)
         where notice_no = #{notice_no}
	</select>
	<select id="getMbtiList" resultType="trip.dto.MbtiDTO">
		select * from mbti_test
	</select>
	<select id="getMbtiType" resultType="String">
		select mbti_type from mbti_test group by mbti_type order by sum(mbti_no)
	</select>
	<select id="getCount" resultType="int">
		select max(mbti_no) from mbti_test
	</select>
	<select id="getMbtiTripList" parameterType="String" resultType="trip.dto.TripDTO">
		select a.* from (select area_name, trip_no, title, substr(content,0,20), video_url,	rating from	trip, area where substr(trip_no,1,2) like area) a join 
		(select t.trip_no from (select * from trip_like
		<choose>
			<when test="mbti.equals('INTP')">
			order by INTP desc
			</when>
			<when test="mbti.equals('ENTP')">
			order by ENTP desc
			</when>
			<when test="mbti.equals('ISTP')">
			order by ISTP desc
			</when>
			<when test="mbti.equals('INFP')">
			order by INFP desc
			</when>
			<when test="mbti.equals('INTJ')">
			order by INTJ desc
			</when>
			<when test="mbti.equals('ESTP')">
			order by ESTP desc
			</when>
			<when test="mbti.equals('INFJ')">
			order by INFJ desc
			</when>
			<when test="mbti.equals('ISFP')">
			order by ISFP desc
			</when>
			<when test="mbti.equals('ISFJ')">
			order by ISFJ desc
			</when>
			<when test="mbti.equals('ESFP')">
			order by ESFP desc
			</when>
			
			<when test="mbti.equals('ESTJ')">
			order by ESTJ desc
			</when>
			<when test="mbti.equals('ENFJ')">
			order by ENFJ desc
			</when>
			<when test="mbti.equals('ESFJ')">
			order by ESFJ desc
			</when>
			<when test="mbti.equals('ENTJ')">
			order by INFJ desc
			</when>
			<when test="mbti.equals('ENFP')">
			order by ENFP desc
			</when>
			<when test="mbti.equals('ISTJ')">
			order by ISTJ desc
			</when>
		</choose> 
		) t where rownum <![CDATA[ < ]]> 6) b on a.trip_no = b.trip_no
		</select>
	<select id="selectPopulByLike" resultType="trip.dto.TripDTO">
		select t.trip_no,title,rating,total,area_name from trip t, area a,
		(select trip_no,total from
		(select rownum, trip_no,total from (select * from trip_like order by total desc))
		where rownum <![CDATA[<]]>= 5) r
		where t.trip_no like r.trip_no and area like substr(t.trip_no,0,2)
	</select>
	<select id="amountB" parameterType="String" resultType="int">
		select count(mbti) from
		(select user_id,mbti from board,utrip_user where id = user_id and write_date > sysdate-30)
		where mbti like #{mb}
	</select>
	<select id="amountC" parameterType="String" resultType="int">
		select count(mbti) from
		(select user_id,mbti from board_comment , utrip_user where id = user_id and write_date > sysdate-30)
		where mbti like #{mb}
	</select>
	<select id="getEmailList" parameterType="String" resultType="String">
		select email from utrip_user where mbti like #{mbti}
	</select>
</mapper>